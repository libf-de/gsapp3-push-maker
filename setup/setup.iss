; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define GSAppName "GSApp Push Maker"
;#define GSAppVersion "1.0"
#include "version.iss"
#define GSAppPublisher "Fabian Schillig"
#define GSAppURL "https://libf.de/gsapp/"
#define GSAppExeName "GSApp Push Maker.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{05A3D579-9757-4535-9ED8-5CA2DDB91012}
AppName={#GSAppName}
AppVersion={#GSAppVersion}
;AppVerName={#GSAppName} {#GSAppVersion}
AppPublisher={#GSAppPublisher}
AppPublisherURL={#GSAppURL}
AppSupportURL={#GSAppURL}
AppUpdatesURL={#GSAppURL}
DefaultDirName={autopf}\GSAppPushMaker
DisableProgramGroupPage=yes
DisableWelcomePage=no
LicenseFile=..\LIZENZ.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputDir=.
OutputBaseFilename=setup
SetupIconFile=..\icon\icon_normal.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
ArchitecturesInstallIn64BitMode=x64

[Code]
var
  Page: TInputFileWizardPage;

procedure InitializeWizard();
begin
  // Erstellen Sie eine Seite, auf der der Benutzer eine Datei auswählen kann
  Page := CreateInputFilePage(wpLicense,
    'Zugangsdaten', 
    'Firebase-Zugangsdaten auswählen', 
    'Das Programm benötigt Firebase-Zugangsdaten in Form einer JSON-Datei.');
  Page.Add('Bitte wählen Sie diese aus:', 'JSON-Dateien (*.json)|*.json', '.'); // Filter für Dateitypen und Standardordner
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  Result := True;

  // Überprüfen, ob die Seite mit der Dateiauswahl die aktuelle ist
  if CurPageID = Page.ID then
  begin
    // Überprüfen, ob eine Datei ausgewählt wurde
    if Page.Values[0] = '' then
    begin
      MsgBox('Sie müssen Zugangsdaten in Form einer JSON-Datei auswählen, um fortzufahren.', mbError, MB_OK);
      Result := False;
      Exit;
    end;
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  DestPath: String;
begin
  if CurStep = ssDone then
  begin
    // Kopieren Sie die ausgewählte Datei in den Installationsordner
    DestPath := ExpandConstant('{app}\auth.json');
    if not FileCopy(Page.Values[0], DestPath, False) then
      MsgBox('Fehler beim Kopieren der Zugangsdaten.', mbError, MB_OK);
  end;
end;

[Languages]
Name: "german"; MessagesFile: "compiler:Languages\German.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
;Source: "C:\Users\Fabian\IdeaProjects\gsapp3-push-maker\build\compose\binaries\main-release\app\GSApp Push Maker\{#GSAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\build\compose\binaries\main-release\app\GSApp Push Maker\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "C:\Users\Fabian\IdeaProjects\gsapp3-push-maker\build\compose\binaries\main-release\app\GSApp Push Maker\runtime\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[UninstallDelete]
Type: files; Name: "{app}\auth.json"

[Icons]
Name: "{autoprograms}\{#GSAppName}"; Filename: "{app}\{#GSAppExeName}"
Name: "{autodesktop}\{#GSAppName}"; Filename: "{app}\{#GSAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#GSAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(GSAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

